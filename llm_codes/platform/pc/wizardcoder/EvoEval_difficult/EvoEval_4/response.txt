Here is the Python code that solves the problem:

```python
from typing import List, Tuple

def weighted_mean_absolute_deviation(numbers: List[Tuple[float, float]]]) -> float:
    weights_sum = sum(w for x, w in numbers)
    if weights_sum != 1.0:
        return "Weights must be positive and sum to 1"

    weighted_mean = sum(x * w for x, w in numbers) / weights_sum
    return sum(w * abs(x - weighted_mean) for x, w in numbers) / weights_sum
```

This function first checks if the sum of the weights is equal to 1.0. If not, it returns an error message. If the sum of the weights is equal to 1.0, it calculates the weighted mean of the dataset and then calculates the weighted mean absolute deviation around this weighted mean. 