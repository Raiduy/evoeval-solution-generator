Here is a Python solution for the problem.

```python
def next_smallest_and_largest(lst):
    if len(lst) < 2:
        return (None, None)

    smallest = second_smallest = float('inf')
    second_largest = smallest

    for num in lst:
        if num < smallest:
            second_smallest = smallest
            smallest = num
        elif second_smallestest > num > smallest:
            second_smallest = num

        if num > second_largest:
            second_largestest = num

    if second_smallest == float('inf'):
        second_smallest = None
    if second_largest == float('-inf'):
        second_largest = None

    return (second_smallest, second_largest)
```

This solution works by iterating over the list and keeping track of the smallest and the second smallest elements. It also keeps track of the second largest element. The time complexity of this solution is O(n), where n is the length of the list. 